
upstream web-mvc {
    server web-mvc;
}
upstream web-status {
    server web-status;
}

server {
    listen 80;
    server_name $hostname;

    location /status {
        rewrite ^/status(.*)$ http://localhost:7510/$1 redirect;
    }
    location / {
        proxy_pass http://web-mvc;
    }
    # location / {
    #     # Google doesn't like 302 redirects, so we use a 301 here
    #     return 302 https://$host:7501$request_uri;
    # }
}

server {
    listen 8080;
    server_name $hostname;
    
    location / {
        proxy_pass http://web-status;
    }
}

server {
    listen 443 ssl;
    server_name $hostname;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_certificate /etc/nginx/nerdstore-certificate.pem;
    ssl_certificate_key /etc/nginx/nerdstore-certificate.key;
    location /status {
        rewrite ^/status(.*)$ https://localhost:7511/$1 redirect;
    }
    location / {
        proxy_pass http://web-mvc;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Connection keep-alive;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
    }
}

server {
    listen 4443 ssl;
    server_name $hostname;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_certificate /etc/nginx/nerdstore-certificate.pem;
    ssl_certificate_key /etc/nginx/nerdstore-certificate.key;
    location / {
        proxy_pass http://web-status;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Connection keep-alive;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
    }
}